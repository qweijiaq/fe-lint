name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3 # 升级到最新版本

      - name: Lock npm version
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.2'

      - name: Install and Build
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm i -g pnpm
          pnpm run init
          pnpm run docs:build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.3 # 假设4.3.1是一个更新的版本
        with:
          branch: gh-pages
          folder: docs/.vuepress/dist
          token: ${{ secrets.ACCESS_TOKEN }}
# name: Build and Deploy # 工作流名称

# on:
#   push: # 当有代码推送时触发
#     branches:
#       - master # 仅监听 master 分支的推送事件

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest # 在最新版本的 Ubuntu 上运行

#     steps:
#       - name: Checkout ️ # 步骤名称，拉取代码
#         uses: actions/checkout@v2.3.1 # 使用 GitHub 提供的官方 action 拉取代码

#       - name: Lock npm version # 锁定 npm 版本
#         uses: actions/setup-node@v3 # 使用 Node.js 官方 action
#         with:
#           node-version: 16.18.0 # 指定 Node.js 版本

#       - name: Install and Build # 安装依赖并构建
#         run: |
#           npm i -g pnpm # 全局安装 pnpm 包管理工具
#           pnpm run init # 初始化项目
#           pnpm run docs:build # 构建文档
#         env: # 设置环境变量
#           NODE_OPTIONS: '--max_old_space_size=4096' # 设置 Node.js 内存限制(老生代)

#       - name: Deploy # 部署
#         uses: JamesIves/github-pages-deploy-action@4.1.3 # 使用 GitHub Pages 部署 action
#         with:
#           BRANCH: gh-pages # 部署到 gh-pages 分支
#           FOLDER: docs/.vuepress/dist # 部署的文件夹路径
#           ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # GitHub Personal Access Token，从 Secrets 中获取

